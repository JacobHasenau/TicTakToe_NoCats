The goal of this project was to take an idea from inception to completion in a weeks time.
I feel slightly short of that goal, by about a day and a half, but it still feels good to have been restricted to such a short time and come up with something that is a fun thing to play around with!
I am happy that I got in more than two players, a board that I tested expanding to 65 x 65 (hopefully larger!), an algorithm that does a great job at detecting all sorts of wins and can check for variable lengths. Figuring out unit tests in Unity has been a thorn in my side for a while, and I was excited to finally figure out how to get those working as well as getting non-unity assemblies into my project for the first time. I am also glad that I got to credit people who I felt were important to the process, and helped me create the game today!

My disapointments outweigh my accomplishments, however, although prehaps I am being harsh on myself.
During this project, I often lost track of time and stayed up later than I healthy should; the goal of this project was to learn, have fun, and maybe make something people would have fun with - not to take over my life.
I also wish I had taken a bit of a better approach when it came to the overall design of some of the classes and interconnectedness; far too many of my "systems" are tightly coupled, and an entire assembly I made specifically to avoid coupling issues I mostly ignored.
And while I am happy that I figured out unit tests, I abandoned the idea quickly as it was taking me too long. Several of the bugs I found while coding could have been caught in unit tests. Also, I only used unit tests on non-monobehaviour classes, meaning I've really only learned half the tool.
I poke fun of it in my credits, but I also regret not messing around with sound effects more - it makes the game feel very lacking and empty, in a strange way.
Plus, with my customization of the shapes colors, I have opened up the possibility of a user making the game impossible to play - my outline system was designed to compat this, but in the long run does almost nothing. I also didn't think to change the color of the board itself, meaning the tic tak toe lines can disappear completly as well.
This is all to ignore some hastly written code that mashed serizlied fields together to avoid needing to think about any good practices involved with queuing up game objects, or any type of optimizations. All gameobjects are destroyed/recreated whenever I need a clean slate, instead of doing more of the work to resuse those already created assets.
A final disappoitment - the winner in the game doesn't even get a line drawn though their victory! A complete oversight on my part...

all in all, a lot to imporve on. I still think there is potentional in this little game idea, and some major imporvements I could make to get it a bit more playable. Better outlining (prehapes with a shader this time?), some type of stats page, actually being able to see the rules, and more personaility (in terms of animations, sounds, art) would go a long way.

Small update, later on the same day:
I went to go build the dang thing and the board wouldn't pop up! I believe this had something to do with sprite shape managers not doing what I thought they would do (need to research that.) Regardless, I couldn't let the project down while in that state, and while I was messing around I had to make some improvements. Prehapes a more realistic time line for these projects is 2 weeks, or I just need to be more statisifed with less. The customization part of the process is uneeded, and coulda avoided a main menu all together. It would have been better to priotize the "personaility." But now, the project builds, settings actually work, and I believe the package is something I could send of and have people actually play.